{
  "name": "@remirror/types",
  "version": "1.0.0",
  "description": "Base types used throughout the remirror packages.",
  "keywords": [
    "remirror"
  ],
  "homepage": "https://github.com/remirror/remirror/tree/HEAD/packages/remirror__types",
  "repository": {
    "type": "git",
    "url": "https://github.com/remirror/remirror.git",
    "directory": "packages/remirror__types"
  },
  "license": "MIT",
  "contributors": [
    "Ifiok Jr. <ifiokotung@gmail.com>"
  ],
  "sideEffects": false,
  "type": "module",
  "exports": {
    ".": {
      "import": "./dist/remirror-types.js",
      "require": "./dist/remirror-types.cjs",
      "types": "./dist-types/index.d.ts"
    },
    "./package.json": "./package.json"
  },
  "main": "./dist/remirror-types.cjs",
  "module": "./dist/remirror-types.js",
  "types": "./dist-types/index.d.ts",
  "files": [
    "dist",
    "dist-types"
  ],
  "dependencies": {
    "type-fest": "^2.0.0"
  },
  "publishConfig": {
    "access": "public"
  },
  "@remirror": {
    "sizeLimit": "0 KB"
  },
  "readme": "# @remirror/types\n\n> Base types used throughout the remirror packages.\n\n[![Version][version]][npm] [![Weekly Downloads][downloads-badge]][npm] [![Bundled size][size-badge]][size] [![Typed Codebase][typescript]](#) [![MIT License][license]](#)\n\n[version]: https://flat.badgen.net/npm/v/@remirror/types\n[npm]: https://npmjs.com/package/@remirror/types\n[license]: https://flat.badgen.net/badge/license/MIT/purple\n[size]: https://bundlephobia.com/result?p=@remirror/types\n[size-badge]: https://flat.badgen.net/bundlephobia/minzip/@remirror/types\n[typescript]: https://flat.badgen.net/badge/icon/TypeScript?icon=typescript&label\n[downloads-badge]: https://badgen.net/npm/dw/@remirror/types/red?icon=npm\n\n<br />\n\n## Installation\n\n```bash\n# yarn\nyarn add @remirror/types\n\n# pnpm\npnpm add @remirror/types\n\n# npm\nnpm install @remirror/types\n```\n\n<br />\n\n## Explanation\n\nThis library exports types used throughout the `remirror` codebase. It has no dependencies on ProseMirror so can be used everywhere.\n\nSince `type-fest` is used throughout the codebase it also re-exports all the types from typefest.\n"
}