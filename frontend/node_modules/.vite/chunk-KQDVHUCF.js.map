{
  "version": 3,
  "sources": ["../engine.io-client/build/esm/globalThis.browser.js", "../engine.io-client/build/esm/util.js", "../engine.io-parser/build/esm/commons.js", "../engine.io-parser/build/esm/encodePacket.browser.js", "../engine.io-parser/build/esm/contrib/base64-arraybuffer.js", "../engine.io-parser/build/esm/decodePacket.browser.js", "../engine.io-parser/build/esm/index.js", "../@socket.io/component-emitter/index.mjs", "../engine.io-client/build/esm/transport.js", "../engine.io-client/build/esm/transports/websocket-constructor.browser.js", "../engine.io-client/build/esm/contrib/yeast.js", "../engine.io-client/build/esm/contrib/parseqs.js", "../engine.io-client/build/esm/contrib/has-cors.js", "../engine.io-client/build/esm/transports/xmlhttprequest.browser.js", "../engine.io-client/build/esm/transports/polling.js", "../engine.io-client/build/esm/transports/websocket.js", "../engine.io-client/build/esm/transports/index.js", "../engine.io-client/build/esm/contrib/parseuri.js", "../engine.io-client/build/esm/socket.js", "../engine.io-client/build/esm/index.js"],
  "sourcesContent": ["export const globalThisShim = (() => {\n    if (typeof self !== \"undefined\") {\n        return self;\n    }\n    else if (typeof window !== \"undefined\") {\n        return window;\n    }\n    else {\n        return Function(\"return this\")();\n    }\n})();\n", "import { globalThisShim as globalThis } from \"./globalThis.js\";\nexport function pick(obj, ...attr) {\n    return attr.reduce((acc, k) => {\n        if (obj.hasOwnProperty(k)) {\n            acc[k] = obj[k];\n        }\n        return acc;\n    }, {});\n}\n// Keep a reference to the real timeout functions so they can be used when overridden\nconst NATIVE_SET_TIMEOUT = globalThis.setTimeout;\nconst NATIVE_CLEAR_TIMEOUT = globalThis.clearTimeout;\nexport function installTimerFunctions(obj, opts) {\n    if (opts.useNativeTimers) {\n        obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(globalThis);\n        obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(globalThis);\n    }\n    else {\n        obj.setTimeoutFn = globalThis.setTimeout.bind(globalThis);\n        obj.clearTimeoutFn = globalThis.clearTimeout.bind(globalThis);\n    }\n}\n// base64 encoded buffers are about 33% bigger (https://en.wikipedia.org/wiki/Base64)\nconst BASE64_OVERHEAD = 1.33;\n// we could also have used `new Blob([obj]).size`, but it isn't supported in IE9\nexport function byteLength(obj) {\n    if (typeof obj === \"string\") {\n        return utf8Length(obj);\n    }\n    // arraybuffer or blob\n    return Math.ceil((obj.byteLength || obj.size) * BASE64_OVERHEAD);\n}\nfunction utf8Length(str) {\n    let c = 0, length = 0;\n    for (let i = 0, l = str.length; i < l; i++) {\n        c = str.charCodeAt(i);\n        if (c < 0x80) {\n            length += 1;\n        }\n        else if (c < 0x800) {\n            length += 2;\n        }\n        else if (c < 0xd800 || c >= 0xe000) {\n            length += 3;\n        }\n        else {\n            i++;\n            length += 4;\n        }\n    }\n    return length;\n}\n", "const PACKET_TYPES = Object.create(null); // no Map = no polyfill\nPACKET_TYPES[\"open\"] = \"0\";\nPACKET_TYPES[\"close\"] = \"1\";\nPACKET_TYPES[\"ping\"] = \"2\";\nPACKET_TYPES[\"pong\"] = \"3\";\nPACKET_TYPES[\"message\"] = \"4\";\nPACKET_TYPES[\"upgrade\"] = \"5\";\nPACKET_TYPES[\"noop\"] = \"6\";\nconst PACKET_TYPES_REVERSE = Object.create(null);\nObject.keys(PACKET_TYPES).forEach(key => {\n    PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\nexport { PACKET_TYPES, PACKET_TYPES_REVERSE, ERROR_PACKET };\n", "import { PACKET_TYPES } from \"./commons.js\";\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = obj => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj && obj.buffer instanceof ArrayBuffer;\n};\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n    if (withNativeBlob && data instanceof Blob) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(data, callback);\n        }\n    }\n    else if (withNativeArrayBuffer &&\n        (data instanceof ArrayBuffer || isView(data))) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(new Blob([data]), callback);\n        }\n    }\n    // plain string\n    return callback(PACKET_TYPES[type] + (data || \"\"));\n};\nconst encodeBlobAsBase64 = (data, callback) => {\n    const fileReader = new FileReader();\n    fileReader.onload = function () {\n        const content = fileReader.result.split(\",\")[1];\n        callback(\"b\" + (content || \"\"));\n    };\n    return fileReader.readAsDataURL(data);\n};\nexport default encodePacket;\n", "// imported from https://github.com/socketio/base64-arraybuffer\nconst chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nconst lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (let i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nexport const encode = (arraybuffer) => {\n    let bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\nexport const decode = (base64) => {\n    let bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n    const arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return arraybuffer;\n};\n", "import { ERROR_PACKET, PACKET_TYPES_REVERSE } from \"./commons.js\";\nimport { decode } from \"./contrib/base64-arraybuffer.js\";\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst decodePacket = (encodedPacket, binaryType) => {\n    if (typeof encodedPacket !== \"string\") {\n        return {\n            type: \"message\",\n            data: mapBinary(encodedPacket, binaryType)\n        };\n    }\n    const type = encodedPacket.charAt(0);\n    if (type === \"b\") {\n        return {\n            type: \"message\",\n            data: decodeBase64Packet(encodedPacket.substring(1), binaryType)\n        };\n    }\n    const packetType = PACKET_TYPES_REVERSE[type];\n    if (!packetType) {\n        return ERROR_PACKET;\n    }\n    return encodedPacket.length > 1\n        ? {\n            type: PACKET_TYPES_REVERSE[type],\n            data: encodedPacket.substring(1)\n        }\n        : {\n            type: PACKET_TYPES_REVERSE[type]\n        };\n};\nconst decodeBase64Packet = (data, binaryType) => {\n    if (withNativeArrayBuffer) {\n        const decoded = decode(data);\n        return mapBinary(decoded, binaryType);\n    }\n    else {\n        return { base64: true, data }; // fallback for old browsers\n    }\n};\nconst mapBinary = (data, binaryType) => {\n    switch (binaryType) {\n        case \"blob\":\n            return data instanceof ArrayBuffer ? new Blob([data]) : data;\n        case \"arraybuffer\":\n        default:\n            return data; // assuming the data is already an ArrayBuffer\n    }\n};\nexport default decodePacket;\n", "import encodePacket from \"./encodePacket.js\";\nimport decodePacket from \"./decodePacket.js\";\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\nconst encodePayload = (packets, callback) => {\n    // some packets may be added to the array while encoding, so the initial length must be saved\n    const length = packets.length;\n    const encodedPackets = new Array(length);\n    let count = 0;\n    packets.forEach((packet, i) => {\n        // force base64 encoding for binary packets\n        encodePacket(packet, false, encodedPacket => {\n            encodedPackets[i] = encodedPacket;\n            if (++count === length) {\n                callback(encodedPackets.join(SEPARATOR));\n            }\n        });\n    });\n};\nconst decodePayload = (encodedPayload, binaryType) => {\n    const encodedPackets = encodedPayload.split(SEPARATOR);\n    const packets = [];\n    for (let i = 0; i < encodedPackets.length; i++) {\n        const decodedPacket = decodePacket(encodedPackets[i], binaryType);\n        packets.push(decodedPacket);\n        if (decodedPacket.type === \"error\") {\n            break;\n        }\n    }\n    return packets;\n};\nexport const protocol = 4;\nexport { encodePacket, encodePayload, decodePacket, decodePayload };\n", "/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nexport function Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  // Remove event specific arrays for event types that no\n  // one is subscribed for to avoid memory leak.\n  if (callbacks.length === 0) {\n    delete this._callbacks['$' + event];\n  }\n\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n\n  var args = new Array(arguments.length - 1)\n    , callbacks = this._callbacks['$' + event];\n\n  for (var i = 1; i < arguments.length; i++) {\n    args[i - 1] = arguments[i];\n  }\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n// alias used for reserved events (protected method)\nEmitter.prototype.emitReserved = Emitter.prototype.emit;\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n", "import { decodePacket } from \"engine.io-parser\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions } from \"./util.js\";\nclass TransportError extends Error {\n    constructor(reason, description, context) {\n        super(reason);\n        this.description = description;\n        this.context = context;\n        this.type = \"TransportError\";\n    }\n}\nexport class Transport extends Emitter {\n    /**\n     * Transport abstract constructor.\n     *\n     * @param {Object} opts - options\n     * @protected\n     */\n    constructor(opts) {\n        super();\n        this.writable = false;\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.query = opts.query;\n        this.socket = opts.socket;\n    }\n    /**\n     * Emits an error.\n     *\n     * @param {String} reason\n     * @param description\n     * @param context - the error context\n     * @return {Transport} for chaining\n     * @protected\n     */\n    onError(reason, description, context) {\n        super.emitReserved(\"error\", new TransportError(reason, description, context));\n        return this;\n    }\n    /**\n     * Opens the transport.\n     */\n    open() {\n        this.readyState = \"opening\";\n        this.doOpen();\n        return this;\n    }\n    /**\n     * Closes the transport.\n     */\n    close() {\n        if (this.readyState === \"opening\" || this.readyState === \"open\") {\n            this.doClose();\n            this.onClose();\n        }\n        return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     */\n    send(packets) {\n        if (this.readyState === \"open\") {\n            this.write(packets);\n        }\n        else {\n            // this might happen if the transport was silently closed in the beforeunload event handler\n        }\n    }\n    /**\n     * Called upon open\n     *\n     * @protected\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        this.writable = true;\n        super.emitReserved(\"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @protected\n     */\n    onData(data) {\n        const packet = decodePacket(data, this.socket.binaryType);\n        this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @protected\n     */\n    onPacket(packet) {\n        super.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @protected\n     */\n    onClose(details) {\n        this.readyState = \"closed\";\n        super.emitReserved(\"close\", details);\n    }\n    /**\n     * Pauses the transport, in order not to lose packets during an upgrade.\n     *\n     * @param onPause\n     */\n    pause(onPause) { }\n}\n", "import { globalThisShim as globalThis } from \"../globalThis.js\";\nexport const nextTick = (() => {\n    const isPromiseAvailable = typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\n    if (isPromiseAvailable) {\n        return (cb) => Promise.resolve().then(cb);\n    }\n    else {\n        return (cb, setTimeoutFn) => setTimeoutFn(cb, 0);\n    }\n})();\nexport const WebSocket = globalThis.WebSocket || globalThis.MozWebSocket;\nexport const usingBrowserWebSocket = true;\nexport const defaultBinaryType = \"arraybuffer\";\n", "// imported from https://github.com/unshiftio/yeast\n'use strict';\nconst alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split(''), length = 64, map = {};\nlet seed = 0, i = 0, prev;\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nexport function encode(num) {\n    let encoded = '';\n    do {\n        encoded = alphabet[num % length] + encoded;\n        num = Math.floor(num / length);\n    } while (num > 0);\n    return encoded;\n}\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nexport function decode(str) {\n    let decoded = 0;\n    for (i = 0; i < str.length; i++) {\n        decoded = decoded * length + map[str.charAt(i)];\n    }\n    return decoded;\n}\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nexport function yeast() {\n    const now = encode(+new Date());\n    if (now !== prev)\n        return seed = 0, prev = now;\n    return now + '.' + encode(seed++);\n}\n//\n// Map each character to its index.\n//\nfor (; i < length; i++)\n    map[alphabet[i]] = i;\n", "// imported from https://github.com/galkn/querystring\n/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\nexport function encode(obj) {\n    let str = '';\n    for (let i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            if (str.length)\n                str += '&';\n            str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n        }\n    }\n    return str;\n}\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\nexport function decode(qs) {\n    let qry = {};\n    let pairs = qs.split('&');\n    for (let i = 0, l = pairs.length; i < l; i++) {\n        let pair = pairs[i].split('=');\n        qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n    }\n    return qry;\n}\n", "// imported from https://github.com/component/has-cors\nlet value = false;\ntry {\n    value = typeof XMLHttpRequest !== 'undefined' &&\n        'withCredentials' in new XMLHttpRequest();\n}\ncatch (err) {\n    // if XMLHttp support is disabled in IE then it will throw\n    // when trying to create\n}\nexport const hasCORS = value;\n", "// browser shim for xmlhttprequest module\nimport { hasCORS } from \"../contrib/has-cors.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nexport function XHR(opts) {\n    const xdomain = opts.xdomain;\n    // XMLHttpRequest can be disabled on IE\n    try {\n        if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n            return new XMLHttpRequest();\n        }\n    }\n    catch (e) { }\n    if (!xdomain) {\n        try {\n            return new globalThis[[\"Active\"].concat(\"Object\").join(\"X\")](\"Microsoft.XMLHTTP\");\n        }\n        catch (e) { }\n    }\n}\n", "import { Transport } from \"../transport.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { encode } from \"../contrib/parseqs.js\";\nimport { encodePayload, decodePayload } from \"engine.io-parser\";\nimport { XHR as XMLHttpRequest } from \"./xmlhttprequest.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions, pick } from \"../util.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nfunction empty() { }\nconst hasXHR2 = (function () {\n    const xhr = new XMLHttpRequest({\n        xdomain: false,\n    });\n    return null != xhr.responseType;\n})();\nexport class Polling extends Transport {\n    /**\n     * XHR Polling constructor.\n     *\n     * @param {Object} opts\n     * @package\n     */\n    constructor(opts) {\n        super(opts);\n        this.polling = false;\n        if (typeof location !== \"undefined\") {\n            const isSSL = \"https:\" === location.protocol;\n            let port = location.port;\n            // some user agents have empty `location.port`\n            if (!port) {\n                port = isSSL ? \"443\" : \"80\";\n            }\n            this.xd =\n                (typeof location !== \"undefined\" &&\n                    opts.hostname !== location.hostname) ||\n                    port !== opts.port;\n            this.xs = opts.secure !== isSSL;\n        }\n        /**\n         * XHR supports binary\n         */\n        const forceBase64 = opts && opts.forceBase64;\n        this.supportsBinary = hasXHR2 && !forceBase64;\n    }\n    get name() {\n        return \"polling\";\n    }\n    /**\n     * Opens the socket (triggers polling). We write a PING message to determine\n     * when the transport is open.\n     *\n     * @protected\n     */\n    doOpen() {\n        this.poll();\n    }\n    /**\n     * Pauses polling.\n     *\n     * @param {Function} onPause - callback upon buffers are flushed and transport is paused\n     * @package\n     */\n    pause(onPause) {\n        this.readyState = \"pausing\";\n        const pause = () => {\n            this.readyState = \"paused\";\n            onPause();\n        };\n        if (this.polling || !this.writable) {\n            let total = 0;\n            if (this.polling) {\n                total++;\n                this.once(\"pollComplete\", function () {\n                    --total || pause();\n                });\n            }\n            if (!this.writable) {\n                total++;\n                this.once(\"drain\", function () {\n                    --total || pause();\n                });\n            }\n        }\n        else {\n            pause();\n        }\n    }\n    /**\n     * Starts polling cycle.\n     *\n     * @private\n     */\n    poll() {\n        this.polling = true;\n        this.doPoll();\n        this.emitReserved(\"poll\");\n    }\n    /**\n     * Overloads onData to detect payloads.\n     *\n     * @protected\n     */\n    onData(data) {\n        const callback = (packet) => {\n            // if its the first message we consider the transport open\n            if (\"opening\" === this.readyState && packet.type === \"open\") {\n                this.onOpen();\n            }\n            // if its a close packet, we close the ongoing requests\n            if (\"close\" === packet.type) {\n                this.onClose({ description: \"transport closed by the server\" });\n                return false;\n            }\n            // otherwise bypass onData and handle the message\n            this.onPacket(packet);\n        };\n        // decode payload\n        decodePayload(data, this.socket.binaryType).forEach(callback);\n        // if an event did not trigger closing\n        if (\"closed\" !== this.readyState) {\n            // if we got data we're not polling\n            this.polling = false;\n            this.emitReserved(\"pollComplete\");\n            if (\"open\" === this.readyState) {\n                this.poll();\n            }\n            else {\n            }\n        }\n    }\n    /**\n     * For polling, send a close packet.\n     *\n     * @protected\n     */\n    doClose() {\n        const close = () => {\n            this.write([{ type: \"close\" }]);\n        };\n        if (\"open\" === this.readyState) {\n            close();\n        }\n        else {\n            // in case we're trying to close while\n            // handshaking is in progress (GH-164)\n            this.once(\"open\", close);\n        }\n    }\n    /**\n     * Writes a packets payload.\n     *\n     * @param {Array} packets - data packets\n     * @protected\n     */\n    write(packets) {\n        this.writable = false;\n        encodePayload(packets, (data) => {\n            this.doWrite(data, () => {\n                this.writable = true;\n                this.emitReserved(\"drain\");\n            });\n        });\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"https\" : \"http\";\n        let port = \"\";\n        // cache busting is forced\n        if (false !== this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        if (!this.supportsBinary && !query.sid) {\n            query.b64 = 1;\n        }\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"https\" === schema && Number(this.opts.port) !== 443) ||\n                (\"http\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        const encodedQuery = encode(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n    /**\n     * Creates a request.\n     *\n     * @param {String} method\n     * @private\n     */\n    request(opts = {}) {\n        Object.assign(opts, { xd: this.xd, xs: this.xs }, this.opts);\n        return new Request(this.uri(), opts);\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @private\n     */\n    doWrite(data, fn) {\n        const req = this.request({\n            method: \"POST\",\n            data: data,\n        });\n        req.on(\"success\", fn);\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr post error\", xhrStatus, context);\n        });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @private\n     */\n    doPoll() {\n        const req = this.request();\n        req.on(\"data\", this.onData.bind(this));\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr poll error\", xhrStatus, context);\n        });\n        this.pollXhr = req;\n    }\n}\nexport class Request extends Emitter {\n    /**\n     * Request constructor\n     *\n     * @param {Object} options\n     * @package\n     */\n    constructor(uri, opts) {\n        super();\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.method = opts.method || \"GET\";\n        this.uri = uri;\n        this.async = false !== opts.async;\n        this.data = undefined !== opts.data ? opts.data : null;\n        this.create();\n    }\n    /**\n     * Creates the XHR object and sends the request.\n     *\n     * @private\n     */\n    create() {\n        const opts = pick(this.opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n        opts.xdomain = !!this.opts.xd;\n        opts.xscheme = !!this.opts.xs;\n        const xhr = (this.xhr = new XMLHttpRequest(opts));\n        try {\n            xhr.open(this.method, this.uri, this.async);\n            try {\n                if (this.opts.extraHeaders) {\n                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n                    for (let i in this.opts.extraHeaders) {\n                        if (this.opts.extraHeaders.hasOwnProperty(i)) {\n                            xhr.setRequestHeader(i, this.opts.extraHeaders[i]);\n                        }\n                    }\n                }\n            }\n            catch (e) { }\n            if (\"POST\" === this.method) {\n                try {\n                    xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n                }\n                catch (e) { }\n            }\n            try {\n                xhr.setRequestHeader(\"Accept\", \"*/*\");\n            }\n            catch (e) { }\n            // ie6 check\n            if (\"withCredentials\" in xhr) {\n                xhr.withCredentials = this.opts.withCredentials;\n            }\n            if (this.opts.requestTimeout) {\n                xhr.timeout = this.opts.requestTimeout;\n            }\n            xhr.onreadystatechange = () => {\n                if (4 !== xhr.readyState)\n                    return;\n                if (200 === xhr.status || 1223 === xhr.status) {\n                    this.onLoad();\n                }\n                else {\n                    // make sure the `error` event handler that's user-set\n                    // does not throw in the same tick and gets caught here\n                    this.setTimeoutFn(() => {\n                        this.onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n                    }, 0);\n                }\n            };\n            xhr.send(this.data);\n        }\n        catch (e) {\n            // Need to defer since .create() is called directly from the constructor\n            // and thus the 'error' event can only be only bound *after* this exception\n            // occurs.  Therefore, also, we cannot throw here at all.\n            this.setTimeoutFn(() => {\n                this.onError(e);\n            }, 0);\n            return;\n        }\n        if (typeof document !== \"undefined\") {\n            this.index = Request.requestsCount++;\n            Request.requests[this.index] = this;\n        }\n    }\n    /**\n     * Called upon error.\n     *\n     * @private\n     */\n    onError(err) {\n        this.emitReserved(\"error\", err, this.xhr);\n        this.cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @private\n     */\n    cleanup(fromError) {\n        if (\"undefined\" === typeof this.xhr || null === this.xhr) {\n            return;\n        }\n        this.xhr.onreadystatechange = empty;\n        if (fromError) {\n            try {\n                this.xhr.abort();\n            }\n            catch (e) { }\n        }\n        if (typeof document !== \"undefined\") {\n            delete Request.requests[this.index];\n        }\n        this.xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @private\n     */\n    onLoad() {\n        const data = this.xhr.responseText;\n        if (data !== null) {\n            this.emitReserved(\"data\", data);\n            this.emitReserved(\"success\");\n            this.cleanup();\n        }\n    }\n    /**\n     * Aborts the request.\n     *\n     * @package\n     */\n    abort() {\n        this.cleanup();\n    }\n}\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\nif (typeof document !== \"undefined\") {\n    // @ts-ignore\n    if (typeof attachEvent === \"function\") {\n        // @ts-ignore\n        attachEvent(\"onunload\", unloadHandler);\n    }\n    else if (typeof addEventListener === \"function\") {\n        const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n        addEventListener(terminationEvent, unloadHandler, false);\n    }\n}\nfunction unloadHandler() {\n    for (let i in Request.requests) {\n        if (Request.requests.hasOwnProperty(i)) {\n            Request.requests[i].abort();\n        }\n    }\n}\n", "import { Transport } from \"../transport.js\";\nimport { encode } from \"../contrib/parseqs.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { pick } from \"../util.js\";\nimport { defaultBinaryType, nextTick, usingBrowserWebSocket, WebSocket, } from \"./websocket-constructor.js\";\nimport { encodePacket } from \"engine.io-parser\";\n// detect ReactNative environment\nconst isReactNative = typeof navigator !== \"undefined\" &&\n    typeof navigator.product === \"string\" &&\n    navigator.product.toLowerCase() === \"reactnative\";\nexport class WS extends Transport {\n    /**\n     * WebSocket transport constructor.\n     *\n     * @param {Object} opts - connection options\n     * @protected\n     */\n    constructor(opts) {\n        super(opts);\n        this.supportsBinary = !opts.forceBase64;\n    }\n    get name() {\n        return \"websocket\";\n    }\n    doOpen() {\n        if (!this.check()) {\n            // let probe timeout\n            return;\n        }\n        const uri = this.uri();\n        const protocols = this.opts.protocols;\n        // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n        const opts = isReactNative\n            ? {}\n            : pick(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n        if (this.opts.extraHeaders) {\n            opts.headers = this.opts.extraHeaders;\n        }\n        try {\n            this.ws =\n                usingBrowserWebSocket && !isReactNative\n                    ? protocols\n                        ? new WebSocket(uri, protocols)\n                        : new WebSocket(uri)\n                    : new WebSocket(uri, protocols, opts);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this.ws.binaryType = this.socket.binaryType || defaultBinaryType;\n        this.addEventListeners();\n    }\n    /**\n     * Adds event listeners to the socket\n     *\n     * @private\n     */\n    addEventListeners() {\n        this.ws.onopen = () => {\n            if (this.opts.autoUnref) {\n                this.ws._socket.unref();\n            }\n            this.onOpen();\n        };\n        this.ws.onclose = (closeEvent) => this.onClose({\n            description: \"websocket connection closed\",\n            context: closeEvent,\n        });\n        this.ws.onmessage = (ev) => this.onData(ev.data);\n        this.ws.onerror = (e) => this.onError(\"websocket error\", e);\n    }\n    write(packets) {\n        this.writable = false;\n        // encodePacket efficient as it uses WS framing\n        // no need for encodePayload\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            encodePacket(packet, this.supportsBinary, (data) => {\n                // always create a new object (GH-437)\n                const opts = {};\n                if (!usingBrowserWebSocket) {\n                    if (packet.options) {\n                        opts.compress = packet.options.compress;\n                    }\n                    if (this.opts.perMessageDeflate) {\n                        const len = \n                        // @ts-ignore\n                        \"string\" === typeof data ? Buffer.byteLength(data) : data.length;\n                        if (len < this.opts.perMessageDeflate.threshold) {\n                            opts.compress = false;\n                        }\n                    }\n                }\n                // Sometimes the websocket has already been closed but the browser didn't\n                // have a chance of informing us about it yet, in that case send will\n                // throw an error\n                try {\n                    if (usingBrowserWebSocket) {\n                        // TypeError is thrown when passing the second argument on Safari\n                        this.ws.send(data);\n                    }\n                    else {\n                        this.ws.send(data, opts);\n                    }\n                }\n                catch (e) {\n                }\n                if (lastPacket) {\n                    // fake drain\n                    // defer to next tick to allow Socket to clear writeBuffer\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    doClose() {\n        if (typeof this.ws !== \"undefined\") {\n            this.ws.close();\n            this.ws = null;\n        }\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"wss\" : \"ws\";\n        let port = \"\";\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"wss\" === schema && Number(this.opts.port) !== 443) ||\n                (\"ws\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        // append timestamp to URI\n        if (this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        // communicate binary support capabilities\n        if (!this.supportsBinary) {\n            query.b64 = 1;\n        }\n        const encodedQuery = encode(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n    /**\n     * Feature detection for WebSocket.\n     *\n     * @return {Boolean} whether this transport is available.\n     * @private\n     */\n    check() {\n        return !!WebSocket;\n    }\n}\n", "import { Polling } from \"./polling.js\";\nimport { WS } from \"./websocket.js\";\nexport const transports = {\n    websocket: WS,\n    polling: Polling,\n};\n", "// imported from https://github.com/galkn/parseuri\n/**\n * Parses a URI\n *\n * Note: we could also have used the built-in URL object, but it isn't supported on all platforms.\n *\n * See:\n * - https://developer.mozilla.org/en-US/docs/Web/API/URL\n * - https://caniuse.com/url\n * - https://www.rfc-editor.org/rfc/rfc3986#appendix-B\n *\n * History of the parse() method:\n * - first commit: https://github.com/socketio/socket.io-client/commit/4ee1d5d94b3906a9c052b459f1a818b15f38f91c\n * - export into its own module: https://github.com/socketio/engine.io-client/commit/de2c561e4564efeb78f1bdb1ba39ef81b2822cb3\n * - reimport: https://github.com/socketio/engine.io-client/commit/df32277c3f6d622eec5ed09f493cae3f3391d242\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\nconst re = /^(?:(?![^:@\\/?#]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@\\/?#]*)(?::([^:@\\/?#]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\nconst parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\nexport function parse(str) {\n    const src = str, b = str.indexOf('['), e = str.indexOf(']');\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n    let m = re.exec(str || ''), uri = {}, i = 14;\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n    return uri;\n}\nfunction pathNames(obj, path) {\n    const regx = /\\/{2,9}/g, names = path.replace(regx, \"/\").split(\"/\");\n    if (path.slice(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.slice(-1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n    return names;\n}\nfunction queryKey(uri, query) {\n    const data = {};\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n    return data;\n}\n", "import { transports } from \"./transports/index.js\";\nimport { installTimerFunctions, byteLength } from \"./util.js\";\nimport { decode } from \"./contrib/parseqs.js\";\nimport { parse } from \"./contrib/parseuri.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { protocol } from \"engine.io-parser\";\nexport class Socket extends Emitter {\n    /**\n     * Socket constructor.\n     *\n     * @param {String|Object} uri - uri or options\n     * @param {Object} opts - options\n     */\n    constructor(uri, opts = {}) {\n        super();\n        this.writeBuffer = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = null;\n        }\n        if (uri) {\n            uri = parse(uri);\n            opts.hostname = uri.host;\n            opts.secure = uri.protocol === \"https\" || uri.protocol === \"wss\";\n            opts.port = uri.port;\n            if (uri.query)\n                opts.query = uri.query;\n        }\n        else if (opts.host) {\n            opts.hostname = parse(opts.host).host;\n        }\n        installTimerFunctions(this, opts);\n        this.secure =\n            null != opts.secure\n                ? opts.secure\n                : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n        if (opts.hostname && !opts.port) {\n            // if no port is specified manually, use the protocol default\n            opts.port = this.secure ? \"443\" : \"80\";\n        }\n        this.hostname =\n            opts.hostname ||\n                (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n        this.port =\n            opts.port ||\n                (typeof location !== \"undefined\" && location.port\n                    ? location.port\n                    : this.secure\n                        ? \"443\"\n                        : \"80\");\n        this.transports = opts.transports || [\"polling\", \"websocket\"];\n        this.writeBuffer = [];\n        this.prevBufferLen = 0;\n        this.opts = Object.assign({\n            path: \"/engine.io\",\n            agent: false,\n            withCredentials: false,\n            upgrade: true,\n            timestampParam: \"t\",\n            rememberUpgrade: false,\n            addTrailingSlash: true,\n            rejectUnauthorized: true,\n            perMessageDeflate: {\n                threshold: 1024,\n            },\n            transportOptions: {},\n            closeOnBeforeunload: true,\n        }, opts);\n        this.opts.path =\n            this.opts.path.replace(/\\/$/, \"\") +\n                (this.opts.addTrailingSlash ? \"/\" : \"\");\n        if (typeof this.opts.query === \"string\") {\n            this.opts.query = decode(this.opts.query);\n        }\n        // set on handshake\n        this.id = null;\n        this.upgrades = null;\n        this.pingInterval = null;\n        this.pingTimeout = null;\n        // set on heartbeat\n        this.pingTimeoutTimer = null;\n        if (typeof addEventListener === \"function\") {\n            if (this.opts.closeOnBeforeunload) {\n                // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\n                // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\n                // closed/reloaded)\n                this.beforeunloadEventListener = () => {\n                    if (this.transport) {\n                        // silently close the transport\n                        this.transport.removeAllListeners();\n                        this.transport.close();\n                    }\n                };\n                addEventListener(\"beforeunload\", this.beforeunloadEventListener, false);\n            }\n            if (this.hostname !== \"localhost\") {\n                this.offlineEventListener = () => {\n                    this.onClose(\"transport close\", {\n                        description: \"network connection lost\",\n                    });\n                };\n                addEventListener(\"offline\", this.offlineEventListener, false);\n            }\n        }\n        this.open();\n    }\n    /**\n     * Creates transport of the given type.\n     *\n     * @param {String} name - transport name\n     * @return {Transport}\n     * @private\n     */\n    createTransport(name) {\n        const query = Object.assign({}, this.opts.query);\n        // append engine.io protocol identifier\n        query.EIO = protocol;\n        // transport name\n        query.transport = name;\n        // session id if we already have one\n        if (this.id)\n            query.sid = this.id;\n        const opts = Object.assign({}, this.opts.transportOptions[name], this.opts, {\n            query,\n            socket: this,\n            hostname: this.hostname,\n            secure: this.secure,\n            port: this.port,\n        });\n        return new transports[name](opts);\n    }\n    /**\n     * Initializes transport to use and starts probe.\n     *\n     * @private\n     */\n    open() {\n        let transport;\n        if (this.opts.rememberUpgrade &&\n            Socket.priorWebsocketSuccess &&\n            this.transports.indexOf(\"websocket\") !== -1) {\n            transport = \"websocket\";\n        }\n        else if (0 === this.transports.length) {\n            // Emit error on next tick so it can be listened to\n            this.setTimeoutFn(() => {\n                this.emitReserved(\"error\", \"No transports available\");\n            }, 0);\n            return;\n        }\n        else {\n            transport = this.transports[0];\n        }\n        this.readyState = \"opening\";\n        // Retry with the next transport if the transport is disabled (jsonp: false)\n        try {\n            transport = this.createTransport(transport);\n        }\n        catch (e) {\n            this.transports.shift();\n            this.open();\n            return;\n        }\n        transport.open();\n        this.setTransport(transport);\n    }\n    /**\n     * Sets the current transport. Disables the existing one (if any).\n     *\n     * @private\n     */\n    setTransport(transport) {\n        if (this.transport) {\n            this.transport.removeAllListeners();\n        }\n        // set up transport\n        this.transport = transport;\n        // set up transport listeners\n        transport\n            .on(\"drain\", this.onDrain.bind(this))\n            .on(\"packet\", this.onPacket.bind(this))\n            .on(\"error\", this.onError.bind(this))\n            .on(\"close\", (reason) => this.onClose(\"transport close\", reason));\n    }\n    /**\n     * Probes a transport.\n     *\n     * @param {String} name - transport name\n     * @private\n     */\n    probe(name) {\n        let transport = this.createTransport(name);\n        let failed = false;\n        Socket.priorWebsocketSuccess = false;\n        const onTransportOpen = () => {\n            if (failed)\n                return;\n            transport.send([{ type: \"ping\", data: \"probe\" }]);\n            transport.once(\"packet\", (msg) => {\n                if (failed)\n                    return;\n                if (\"pong\" === msg.type && \"probe\" === msg.data) {\n                    this.upgrading = true;\n                    this.emitReserved(\"upgrading\", transport);\n                    if (!transport)\n                        return;\n                    Socket.priorWebsocketSuccess = \"websocket\" === transport.name;\n                    this.transport.pause(() => {\n                        if (failed)\n                            return;\n                        if (\"closed\" === this.readyState)\n                            return;\n                        cleanup();\n                        this.setTransport(transport);\n                        transport.send([{ type: \"upgrade\" }]);\n                        this.emitReserved(\"upgrade\", transport);\n                        transport = null;\n                        this.upgrading = false;\n                        this.flush();\n                    });\n                }\n                else {\n                    const err = new Error(\"probe error\");\n                    // @ts-ignore\n                    err.transport = transport.name;\n                    this.emitReserved(\"upgradeError\", err);\n                }\n            });\n        };\n        function freezeTransport() {\n            if (failed)\n                return;\n            // Any callback called by transport should be ignored since now\n            failed = true;\n            cleanup();\n            transport.close();\n            transport = null;\n        }\n        // Handle any error that happens while probing\n        const onerror = (err) => {\n            const error = new Error(\"probe error: \" + err);\n            // @ts-ignore\n            error.transport = transport.name;\n            freezeTransport();\n            this.emitReserved(\"upgradeError\", error);\n        };\n        function onTransportClose() {\n            onerror(\"transport closed\");\n        }\n        // When the socket is closed while we're probing\n        function onclose() {\n            onerror(\"socket closed\");\n        }\n        // When the socket is upgraded while we're probing\n        function onupgrade(to) {\n            if (transport && to.name !== transport.name) {\n                freezeTransport();\n            }\n        }\n        // Remove all listeners on the transport and on self\n        const cleanup = () => {\n            transport.removeListener(\"open\", onTransportOpen);\n            transport.removeListener(\"error\", onerror);\n            transport.removeListener(\"close\", onTransportClose);\n            this.off(\"close\", onclose);\n            this.off(\"upgrading\", onupgrade);\n        };\n        transport.once(\"open\", onTransportOpen);\n        transport.once(\"error\", onerror);\n        transport.once(\"close\", onTransportClose);\n        this.once(\"close\", onclose);\n        this.once(\"upgrading\", onupgrade);\n        transport.open();\n    }\n    /**\n     * Called when connection is deemed open.\n     *\n     * @private\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        Socket.priorWebsocketSuccess = \"websocket\" === this.transport.name;\n        this.emitReserved(\"open\");\n        this.flush();\n        // we check for `readyState` in case an `open`\n        // listener already closed the socket\n        if (\"open\" === this.readyState && this.opts.upgrade) {\n            let i = 0;\n            const l = this.upgrades.length;\n            for (; i < l; i++) {\n                this.probe(this.upgrades[i]);\n            }\n        }\n    }\n    /**\n     * Handles a packet.\n     *\n     * @private\n     */\n    onPacket(packet) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            this.emitReserved(\"packet\", packet);\n            // Socket is live - any packet counts\n            this.emitReserved(\"heartbeat\");\n            switch (packet.type) {\n                case \"open\":\n                    this.onHandshake(JSON.parse(packet.data));\n                    break;\n                case \"ping\":\n                    this.resetPingTimeout();\n                    this.sendPacket(\"pong\");\n                    this.emitReserved(\"ping\");\n                    this.emitReserved(\"pong\");\n                    break;\n                case \"error\":\n                    const err = new Error(\"server error\");\n                    // @ts-ignore\n                    err.code = packet.data;\n                    this.onError(err);\n                    break;\n                case \"message\":\n                    this.emitReserved(\"data\", packet.data);\n                    this.emitReserved(\"message\", packet.data);\n                    break;\n            }\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon handshake completion.\n     *\n     * @param {Object} data - handshake obj\n     * @private\n     */\n    onHandshake(data) {\n        this.emitReserved(\"handshake\", data);\n        this.id = data.sid;\n        this.transport.query.sid = data.sid;\n        this.upgrades = this.filterUpgrades(data.upgrades);\n        this.pingInterval = data.pingInterval;\n        this.pingTimeout = data.pingTimeout;\n        this.maxPayload = data.maxPayload;\n        this.onOpen();\n        // In case open handler closes socket\n        if (\"closed\" === this.readyState)\n            return;\n        this.resetPingTimeout();\n    }\n    /**\n     * Sets and resets ping timeout timer based on server pings.\n     *\n     * @private\n     */\n    resetPingTimeout() {\n        this.clearTimeoutFn(this.pingTimeoutTimer);\n        this.pingTimeoutTimer = this.setTimeoutFn(() => {\n            this.onClose(\"ping timeout\");\n        }, this.pingInterval + this.pingTimeout);\n        if (this.opts.autoUnref) {\n            this.pingTimeoutTimer.unref();\n        }\n    }\n    /**\n     * Called on `drain` event\n     *\n     * @private\n     */\n    onDrain() {\n        this.writeBuffer.splice(0, this.prevBufferLen);\n        // setting prevBufferLen = 0 is very important\n        // for example, when upgrading, upgrade packet is sent over,\n        // and a nonzero prevBufferLen could cause problems on `drain`\n        this.prevBufferLen = 0;\n        if (0 === this.writeBuffer.length) {\n            this.emitReserved(\"drain\");\n        }\n        else {\n            this.flush();\n        }\n    }\n    /**\n     * Flush write buffers.\n     *\n     * @private\n     */\n    flush() {\n        if (\"closed\" !== this.readyState &&\n            this.transport.writable &&\n            !this.upgrading &&\n            this.writeBuffer.length) {\n            const packets = this.getWritablePackets();\n            this.transport.send(packets);\n            // keep track of current length of writeBuffer\n            // splice writeBuffer and callbackBuffer on `drain`\n            this.prevBufferLen = packets.length;\n            this.emitReserved(\"flush\");\n        }\n    }\n    /**\n     * Ensure the encoded size of the writeBuffer is below the maxPayload value sent by the server (only for HTTP\n     * long-polling)\n     *\n     * @private\n     */\n    getWritablePackets() {\n        const shouldCheckPayloadSize = this.maxPayload &&\n            this.transport.name === \"polling\" &&\n            this.writeBuffer.length > 1;\n        if (!shouldCheckPayloadSize) {\n            return this.writeBuffer;\n        }\n        let payloadSize = 1; // first packet type\n        for (let i = 0; i < this.writeBuffer.length; i++) {\n            const data = this.writeBuffer[i].data;\n            if (data) {\n                payloadSize += byteLength(data);\n            }\n            if (i > 0 && payloadSize > this.maxPayload) {\n                return this.writeBuffer.slice(0, i);\n            }\n            payloadSize += 2; // separator + packet type\n        }\n        return this.writeBuffer;\n    }\n    /**\n     * Sends a message.\n     *\n     * @param {String} msg - message.\n     * @param {Object} options.\n     * @param {Function} callback function.\n     * @return {Socket} for chaining.\n     */\n    write(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    send(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param {String} type: packet type.\n     * @param {String} data.\n     * @param {Object} options.\n     * @param {Function} fn - callback function.\n     * @private\n     */\n    sendPacket(type, data, options, fn) {\n        if (\"function\" === typeof data) {\n            fn = data;\n            data = undefined;\n        }\n        if (\"function\" === typeof options) {\n            fn = options;\n            options = null;\n        }\n        if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\n            return;\n        }\n        options = options || {};\n        options.compress = false !== options.compress;\n        const packet = {\n            type: type,\n            data: data,\n            options: options,\n        };\n        this.emitReserved(\"packetCreate\", packet);\n        this.writeBuffer.push(packet);\n        if (fn)\n            this.once(\"flush\", fn);\n        this.flush();\n    }\n    /**\n     * Closes the connection.\n     */\n    close() {\n        const close = () => {\n            this.onClose(\"forced close\");\n            this.transport.close();\n        };\n        const cleanupAndClose = () => {\n            this.off(\"upgrade\", cleanupAndClose);\n            this.off(\"upgradeError\", cleanupAndClose);\n            close();\n        };\n        const waitForUpgrade = () => {\n            // wait for upgrade to finish since we can't send packets while pausing a transport\n            this.once(\"upgrade\", cleanupAndClose);\n            this.once(\"upgradeError\", cleanupAndClose);\n        };\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.readyState = \"closing\";\n            if (this.writeBuffer.length) {\n                this.once(\"drain\", () => {\n                    if (this.upgrading) {\n                        waitForUpgrade();\n                    }\n                    else {\n                        close();\n                    }\n                });\n            }\n            else if (this.upgrading) {\n                waitForUpgrade();\n            }\n            else {\n                close();\n            }\n        }\n        return this;\n    }\n    /**\n     * Called upon transport error\n     *\n     * @private\n     */\n    onError(err) {\n        Socket.priorWebsocketSuccess = false;\n        this.emitReserved(\"error\", err);\n        this.onClose(\"transport error\", err);\n    }\n    /**\n     * Called upon transport close.\n     *\n     * @private\n     */\n    onClose(reason, description) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            // clear timers\n            this.clearTimeoutFn(this.pingTimeoutTimer);\n            // stop event from firing again for transport\n            this.transport.removeAllListeners(\"close\");\n            // ensure transport won't stay open\n            this.transport.close();\n            // ignore further transport communication\n            this.transport.removeAllListeners();\n            if (typeof removeEventListener === \"function\") {\n                removeEventListener(\"beforeunload\", this.beforeunloadEventListener, false);\n                removeEventListener(\"offline\", this.offlineEventListener, false);\n            }\n            // set ready state\n            this.readyState = \"closed\";\n            // clear session id\n            this.id = null;\n            // emit close event\n            this.emitReserved(\"close\", reason, description);\n            // clean buffers after, so users can still\n            // grab the buffers on `close` event\n            this.writeBuffer = [];\n            this.prevBufferLen = 0;\n        }\n    }\n    /**\n     * Filters upgrades, returning only those matching client transports.\n     *\n     * @param {Array} upgrades - server upgrades\n     * @private\n     */\n    filterUpgrades(upgrades) {\n        const filteredUpgrades = [];\n        let i = 0;\n        const j = upgrades.length;\n        for (; i < j; i++) {\n            if (~this.transports.indexOf(upgrades[i]))\n                filteredUpgrades.push(upgrades[i]);\n        }\n        return filteredUpgrades;\n    }\n}\nSocket.protocol = protocol;\n", "import { Socket } from \"./socket.js\";\nexport { Socket };\nexport const protocol = Socket.protocol;\nexport { Transport } from \"./transport.js\";\nexport { transports } from \"./transports/index.js\";\nexport { installTimerFunctions } from \"./util.js\";\nexport { parse } from \"./contrib/parseuri.js\";\nexport { nextTick } from \"./transports/websocket-constructor.js\";\n"],
  "mappings": "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",
  "names": []
}
